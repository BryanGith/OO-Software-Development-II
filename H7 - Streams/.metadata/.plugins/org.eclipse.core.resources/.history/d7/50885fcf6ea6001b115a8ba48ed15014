package domein;

import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import persistentie.VliegmaatschappijMapper;

public class DomeinController {
	private final VliegmaatschappijRepository vliegmijRepository;

	public DomeinController() {
		this.vliegmijRepository = new VliegmaatschappijRepository();
	}

	public String geefAirlines() {
		List<Vliegmaatschappij> alleMaatSchappijen = vliegmijRepository.getMaatschappijen();
		return zetLijstOmNaarString(alleMaatSchappijen);
	}

	private String zetLijstOmNaarString(List<Vliegmaatschappij> lijst) {
		// return lijst.stream().map(vmij ->
		// vmij.toString()).collect(Collectors.joining(String.format("%n")));
		return lijst.stream().map(Vliegmaatschappij::toString).collect(Collectors.joining(String.format("%n")));
	}

	public List<String> geefAlleAirlinesMetMinstensAantalPartners(int aantal) {
		return vliegmijRepository.geefAlleAirlinesMetMinstensAantalPartners(aantal).stream()
				.map(Vliegmaatschappij::getNaam).collect(Collectors.toList());
	}

	public String geefAirlinesAlfabetischGesorteerd() {
		return zetLijstOmNaarString(vliegmijRepository.geefAirlinesAlfabetischGesorteerd());
	}

	public String geefAirlinesGesorteerdVolgensAantalPartners() {
		return null;
	}

	public String geefEersteAirlineStartendMet(String woord) {
		return null;
	}

	public String geefEenAirlineMetPartner(String partner) {
		return null;
	}

}
